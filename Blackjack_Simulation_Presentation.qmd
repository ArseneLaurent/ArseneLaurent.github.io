---
title: "Blackjack Simulation Presentation"
author: "Arsene Laurent"
subtitle: "5/13/2025"
format:
  revealjs:
    scrollable: true
    slide-number: true
    show-slide-number: all
    embed-resources: true
    theme: moon
    code-fold: true
execute:
  echo: true
  warning: false
  message: false
---

## Goals

For this project, I wanted to create a simulation to model the probability of winning versus the dealer in blackjack, assuming that both the player and the dealer employ standard blackjack strategy of hitting until you get 17 or higher. For the purposes of this simulation, we ignore the option to split.

## Implementation

-   Create a function that:
    -   Adds the appropriate number of each card into a "deck"
    -   Shuffles the "deck" for use in our simulation
    -   Assigns the first two cards in the deck to the player, and the next two to the dealer, removing all four from the deck
    -   Keeps drawing cards for both player and dealer until the sum of of each hand is greater than or equal to 17
    -   Compares the sum of each hand and returns the result for the player
-   Create another function that:
    -   Returns the sum of the selected hand
    -   Rassigns the value of an Ace as either 1 or 11 depending on the best choice

## Code
```{r}
library(purrr)
library(ggthemes)

simulate_blackjack_game <- function() {

  deck <- c(rep(2:10, 4), rep(10, 12), rep(11, 4)) 
  deck <- sample(deck, length(deck), replace = FALSE)
  

  player_hand <- deck[1:2]
  dealer_hand <- deck[3:4]
  deck <- deck[-(1:4)] 
  hand_total <- function(hand) {
    total <- sum(hand)
    num_aces <- sum(hand == 11)
  
    while (total > 21 & num_aces > 0) {
      total <- total - 10
      num_aces <- num_aces - 1
    }
    
    return(total)
  }
  
 
  while (hand_total(player_hand) < 17) {
    player_hand <- c(player_hand, deck[1])  
    deck <- deck[-1] 
  }
  player_total <- hand_total(player_hand)
  

  while (hand_total(dealer_hand) < 17) {
    dealer_hand <- c(dealer_hand, deck[1]) 
    deck <- deck[-1] 
  }
  dealer_total <- hand_total(dealer_hand)

  if (player_total > 21) {
    return("Loss") 
  } else if (dealer_total > 21 | player_total > dealer_total) {
    return("Win") 
  } else if (player_total == dealer_total) {
    return("Push") 
  } else {
    return("Loss") 
  }
}

num_simulations <- 100000
results <- map_chr(1:num_simulations, ~ simulate_blackjack_game())


win_prob <- mean(results == "Win")
loss_prob <- mean(results == "Loss")
push_prob <- mean(results == "Push")
```
```{r}
cat("Estimated probability of winning:", win_prob, "\n")
cat("Estimated probability of losing:", loss_prob, "\n")
cat("Estimated probability of a push (tie):", push_prob, "\n")
```

## Graph
```{r, fig.height=4, fig.width=6}
library(ggplot2)
library(ggthemes)
library(purrr)
df <- data.frame(Result = c("Win", "Loss", "Push"), Probability = c(win_prob, loss_prob, push_prob))

ggplot(df, aes(x = Result, y = Probability, fill = Result)) +
  geom_bar(stat = "identity") +
  labs(title = "Estimated Probabilities in Single-Deck Blackjack", y = "Probability", x = "Game Outcome") +
  theme_minimal() + theme_solarized(light = FALSE)

```

## Analysis
- The graph and the numbers both show that the probability of losing is around 8% greater than the probability of winning using this strategy
- Even though the strategy allows for winning around 40% of the time, you would still lose more often than you win
- It might be best to employ a more sophisticated strategy
  - Basing the decision on whether to hit or stand on the cards that the dealer is showing, lessening the chances that the player busts if it's likely that the dealer will bust if the player stands instead of hitting, even if the player has a hand less than 17